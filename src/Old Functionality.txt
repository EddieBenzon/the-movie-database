************************* NAVBAR *****************************************

const navigate = useNavigate();
  const { setTitleTerm, setSearchStatus } = useGlobalContext();
  const refContainer = useRef(null);
  const handleSubmit = (e) => {
    e.preventDefault();
    if (!refContainer.current.value) return;
    setTitleTerm(refContainer.current.value);
    setSearchStatus(true);
    navigate("/");

************************* RESULTS COMPONENT ************************************

const { movies, loading, searchStatus, titleTerm } = useGlobalContext();

************************* GLOBAL CONTEXT STUFF ***********************************

const [movies, setMovies] = useState([]);
  const [searchTerm, setSearchTerm] = useState("");
  const [titleTerm, setTitleTerm] = useState("");
  const [loading, setLoading] = useState(false);
  const [searchStatus, setSearchStatus] = useState(false);

  const fetchMostPopular = async () => {
    setLoading(true);
    setSearchStatus(false);
    try {
      const response = await fetch(defaulturl);
      const data = await response.json();
      const mostPopular = await [...data.items];
      mostPopular.splice(50, 50);
      setMovies(mostPopular);
      setLoading(false);
    } catch (error) {
      console.log(error);
      setLoading(false);
    }
  };

  const findByTitle = async () => {
    setLoading(true);
    setSearchStatus(true);
    try {
      const response = await fetch(
        `${titleurl}${titleTerm}&title_type=feature,tv_movie`
      );
      const data = await response.json();
      const movieArray = await [...data.results];
      setMovies(movieArray);
      setLoading(false);
    } catch (error) {
      console.log(error);
      setLoading(false);
    }
  };
  useEffect(() => {
    findByTitle();
  }, [titleTerm]);
  useEffect(() => {
    fetchMostPopular();
  }, []);

************************* GENRES ***********************************

const [genre, setGenre] = useState("");
  const [movies, setMovies] = useState([]);

  const handleGenre = (e) => {
    e.preventDefault();
    setGenre(e.target.value);
  };
  useEffect(() => {
    if (genre !== "") {
      console.log(genre);
      fetch(`${genreURL}&genres=${genre}`)
        .then((res) => res.json())
        .then((data) => {
          setMovies(data.results);
        });
    }
  }, [genre]);
  console.log(movies, genre);





























